<?php

include('phpmailer/class.phpmailer.php');

//uncomment this for production use
//ini_set('display_errors',true);



require('db.php');

class OpenSession
{
  var $user = null;
  var $userid = null;
  var $firstname = null;
  var $lastname = null;
  var $status = null;
  var $admin = false;
  var $isVerified = false;

  var $submissionsPath = "/acminfo/2/sigs/sigchi/chi2008/altchisystem/submissions/";
  var $submissionsUrl = "submissions/";

  //
  // should be in forum,
  // avoids loading Forum.php
  //
  function getNumNewPosts()
  {
	global $dbprefix;
    $since = $this->lastlogin;

    // get number of new posts since last logged in. ($since comes from $_SESSION[$dbprefix][$dbprefix]['lastlogin'])
    $q = "SELECT count(*) FROM {$dbprefix}forum_posts pos WHERE pos.posted>'$since'";
    $r = mysql_query($q);
    $w = mysql_fetch_row($r);
    mysql_free_result($r);
    return $w[0];
  }

  function login($user,$pass)
  {
    global $dbprefix;
    $md = md5($pass);

    $query = "SELECT * FROM {$dbprefix}users WHERE user='$user'";// AND pass='$md'";
    $query .= " AND pass='$md'";

    $result = mysql_query($query);

    if (mysql_num_rows($result)==0) return false;

    $id = mysql_result($result,0,'id');
    $lastlogin = mysql_result($result,0,'lastlogin');

    $now = date("Y-m-d H:i:s");
    $query = "UPDATE {$dbprefix}users SET lastlogin='$now' WHERE id='$id'";
    mysql_query($query);

    if ($this->loadUserinfo($user))
    {
      if ($this->isVerified)
      {
        if (!isset($_SESSION[$dbprefix]['user'])||$_SESSION[$dbprefix]['user']!=$this->user)
        {
          $_SESSION[$dbprefix]['user'] = $this->user;
          $_SESSION[$dbprefix]['userid'] = $this->userid;
          $_SESSION[$dbprefix]['lastlogin'] = $lastlogin;
        }
      }
      else
        return "unverified";
    }
    else
      return false;

    $userid = $this->userid;
    $this->log("users","login","$userid,$user");

    return true;
  }

  function logout()
  {
	global $dbprefix;
//    unset($_SESSION[$dbprefix]['user']);
//    unset($_SESSION[$dbprefix]['userid']);
	unset($_SESSION[$dbprefix]);

    $userid = $this->userid;
    $user = $this->user;
    $this->log("users","logout","$userid,$user");
  }

  function register($user,$pass,$first,$last,$affiliation,$email,$presentation)
  {
    global $dbprefix;
    $md = md5($pass);

    $registered = date("Y-m-d H:i:s");

    $query = "INSERT INTO {$dbprefix}users (user,firstname,lastname,pass,affiliation,email,presentation,status,registered) VALUES ('$user','$first','$last','$md','$affiliation','$email','$presentation','','$registered')";
    mysql_query($query);

    $id = mysql_insert_id();

    $this->log("user","registered","$id,$user");

    return true;
  }

  function userVerify( $userid )
  {
    global $dbprefix;
    $query = "UPDATE {$dbprefix}users SET status='user' WHERE id='$userid'";
    return mysql_query($query);
  }

  function userSetPassword( $userid, $password )
  {
    global $dbprefix;
    $md = md5($password);
    $query = "UPDATE {$dbprefix}users SET pass='$md' WHERE id='$userid'";
    return mysql_query($query);
  }

  function userSetProfile( $userid, $email, $affiliation, $presentation )
  {
    global $dbprefix;
    $query = "UPDATE {$dbprefix}users SET email='$email', affiliation='$affiliation', presentation='$presentation' WHERE id='$userid'";
    return mysql_query($query);
  }
  
  function sendEmail( $userid, $email )
  {
	$user = $this->getUserinfo($userid);
	if (!$user) return false;
    $mail = new PHPMailer();

    if (!$mail) return false;

    $mail->IsSMTP();
    $mail->Host = "localhost";
    //$mail->SMTPAuth = true;
    //$mail->SMTPAuth = false;
    //$mail->Username = "noreply";
    //$mail->Password = "8ouq2abr";

    $mail->From = "chi2008-alt@acm.org";
    $mail->FromName = "";
    $mail->AddAddress($user['email'],$user['firstname']." ".$user['lastname']);
    // $mail->AddReplyTo("noreply@acm.org","No reply");

    $mail->IsHTML(false);

    $mail->Subject = "[alt.chi]";
    $mail->Body = $email;
    if ($mail->Send())
    {
      return true;
    }
    else
    {
      return false;
    }
  }

  function sendVerificationMail( $username )
  {
    $user = $this->getUserByName($username);
    if (!$user) return false;

    $mail = new PHPMailer();

    if (!$mail) return false;

    $mail->IsSMTP();
    $mail->Host = "localhost";
    //$mail->SMTPAuth = true;
    //$mail->Username = "noreply";
    //$mail->Password = "8ouq2abr";

    //$mail->cc = "jofish@cornell.edu";
    $mail->From = "chi2008-alt@acm.org";
    $mail->FromName = "alt.chi";
    $mail->AddAddress($user['email'],$user['firstname']." ".$user['lastname']);
    $mail->AddReplyTo("noreply@acm.org","No reply");

    $mail->IsHTML(false);

    $mail->Subject = "[alt.chi] Verification";
    $mail->Body = "";

    $code = md5($user['firstname'].$user['lastname'].$user['email']);
$mail->Body .= "Thanks for your interest in alt.chi 2008!

To verify your account, please click on the link below.

IMPORTANT: You must agree to certain conditions to be able to participate in the alt.chi review process. These are clearly stated on the web site you reach through the link. READ THEM CAREFULLY before you accept!

At the site, in addition to submissions and reviews, you will also find a forum section where you can discuss anything you want with other members, as well as ask us specific questions.

We look forward to your contributions!

   - Jofish, Louise & Caitlin

http://www.chi2008.org/altchisystem/index.php?action=verify&user=$username&code=$code
";

    if ($mail->Send())
    {
      return true;
    }
    else
    {
      return false;
    }
  }

  function userExists($user)
  {
    global $dbprefix;
    $query = "SELECT * FROM {$dbprefix}users WHERE user='$user'";
    $result = mysql_query($query);
    if (mysql_num_rows($result)==0) return false;
    else return true;
  }

  function setPermissions()
  {
    if (!isset($this->userid)) return false;

    switch($this->status)
    {
    case 'admin':
      $this->admin = true;
    default:
      break;
    }

    return true;
  }

  function loadUserinfo($user)
  {
    global $dbprefix;
    if ($user=="") return false;

    $query = "SELECT * FROM {$dbprefix}users WHERE user='$user'";
    $result = mysql_query($query);
    if (mysql_num_rows($result)==0) return false;

    $this->user = $user;
    $this->userid = mysql_result($result,0,'id');
    $this->firstname = mysql_result($result,0,'firstname');
    $this->lastname = mysql_result($result,0,'lastname');
    $this->status = mysql_result($result,0,'status');
    $this->isVerified = $this->status!=""?true:false;
    $this->lastlogin = $_SESSION[$dbprefix]['lastlogin'];

    $this->setPermissions();

    return true;
  }

  function getUserByEmail( $email )
  {
    global $dbprefix;
    $query = "SELECT * FROM {$dbprefix}users WHERE email='$email'";
    $result = mysql_query($query);

    if (mysql_num_rows($result)==0) return null;

    $user = mysql_fetch_assoc($result);
    mysql_free_result($result);

    // make backwards compatible
    $user['name'] = $user['user'];

    return $user;
  }

  function getUserByName($username)
  {
    global $dbprefix;
    $query = "SELECT * FROM {$dbprefix}users WHERE user='$username'";
    $result = mysql_query($query);

    if (mysql_num_rows($result)==0) return null;

    $user = mysql_fetch_assoc($result);
    mysql_free_result($result);

    // make backwards compatible
    $user['name'] = $user['user'];

    return $user;
  }

  function getUserinfo($userid)
  {
    global $dbprefix;
    $query = "SELECT * FROM {$dbprefix}users WHERE id='$userid'";
    $result = mysql_query($query);

    if (mysql_num_rows($result)==0) return null;

    $user = mysql_fetch_assoc($result);
    mysql_free_result($result);

    // make backwards compatible
    $user['name'] = $user['user'];

    return $user;
  }

  function userMakeAdmin($userid)
  {
    global $dbprefix;
    $query = "UPDATE {$dbprefix}users SET status='admin' WHERE id='$userid'";
    return mysql_query($query);
  }

  //
  // submissions
  //

  //
  // prepares the submitted file.
  // copies the temporary file to user temp directory and returns filename
  //
  function submitSubmissionPrepare($title,$authors,$type,$keywords,$abstract_,$file,$link)
  {
    $userid = $this->userid;

    $filename = null;
    $filesize = 0;
    if ($file && $file['tmp_name']!="")
    {
      $filename = $file['name'];
      mkdir($this->submissionsPath.$this->user);
      if (copy($file['tmp_name'],$this->submissionsPath.($this->user)."/".$filename))
      {
        $this->log("submissions","submitprepare","$filename");
        return $filename;
      }
      else
      {
        $this->log("submissions","submitprepare","FAILED to copy $filename");
      }
    }
    else
      $this->log("submissions","submitprepare","no file to prepare");

    return null;
  }

  function submitSubmission($title,$authors,$type,$keywords,$abstract_,$filename,$link, $extras_name,$extras_content, $history, $hidden)
  {
    global $dbprefix;

    $userid = $this->userid;

    $filesize = 0;
    if ($filename)
    {
      $query = "SELECT COUNT(*) FROM {$dbprefix}submissions WHERE userid='$userid'";
      $result = mysql_query($query);
      $row = mysql_fetch_row($result);
      $numsubs = $row[0];

      $oldfilename = $this->submissionsPath.$this->user."/".$filename;
      $newfilename = "submission_".($this->user)."_".$numsubs.substr($filename, strrpos($filename,"."));
      $filesize = filesize($oldfilename);

      if (!rename($oldfilename,$this->submissionsPath.$newfilename)) return false;
      $filename = $newfilename;
    }
    else
      {
	print("jofisherror: no \$filename <br>");
      }

    $date = date("Y-m-d H:i:s");

    $hiddenstr = $hidden?"1":"0";

    $query = "INSERT INTO {$dbprefix}submissions (userid,title,additionalauthors,type,keywords,abstract,filename,filesize,link,history,submitted,hidden)".
      "VALUES ".
      "('$userid','".
      mysql_real_escape_string($title)."','".
      mysql_real_escape_string($authors)."','".
      mysql_real_escape_string($type)."','".
      mysql_real_escape_string($keywords)."','".
      mysql_real_escape_string($abstract_)."'".
      ",'$filename','$filesize','$link','".
      mysql_real_escape_string($history).
      "','.$date','$hiddenstr')";
    if (!mysql_query($query)) 
      {
	echo "there was some mysql error:". mysql_error();
	return false;
      }

    $id = mysql_insert_id();

    $this->log("submissions","submit","$id,$title");

    // adding extras
    if (count($extras_name)>0 && count($extras_content)>0)
    {
      for ($i=0;$i<count($extras_name)&&$i<count($extras_content);$i++)
      {
        $name = $extras_name[$i];
        $content = $extras_content[$i];
        if ($name!="" || $content!="")
        {
          $query = "INSERT INTO {$dbprefix}submissions_extrafields (submissionid,name,content) VALUES ('$id','$name','$content')";
          mysql_query($query);
        }
      }
    }

    // set search words
    $this->parseForSearchWords($title,"submissions","$id");
    $this->parseForSearchWords($abstract_,"submissions","$id");
    $this->parseForSearchWords($authors,"submissions","$id");
    $this->parseForSearchWords($keywords,"submissions","$id");
    $this->parseForSearchWords($this->firstname." ".$this->lastname,"submissions","$id");

    return $id;
  }

  function updateSubmission($id,$title,$authors,$type,$keywords,$abstract_,$link,$history)
  {
    global $dbprefix;
    if (!$id||!$title||!type||!abstract_) return false;

    $submission = $this->getSubmission($id);
    if (!$submission) return false;

    $editdate = date("Y-m-d H:i:s");

    $query = "UPDATE {$dbprefix}submissions SET title='$title',additionalauthors='$authors',type='$type',keywords='$keywords',abstract='$abstract_',history='$history',edited='$editdate' WHERE id='$id'";
    if (mysql_query($query))
    {
      $this->log("submissions","update","$id");

      // update search words
      $this->removeSearchWords("submissions","$id");
      $this->parseForSearchWords($title,"submissions","$id");
      $this->parseForSearchWords($abstract_,"submissions","$id");
      $this->parseForSearchWords($authors,"submissions","$id");
      $this->parseForSearchWords($this->firstname." ".$this->lastname,"submissions","$id");
      $this->parseForSearchWords($keywords,"submissions","$id");
      return true;
    }
    return false;
  }

  function updateSubmissionExtras( $id, $extras_name,$extras_content )
  {
    global $dbprefix;
    $query = "DELETE FROM {$dbprefix}submissions_extrafields WHERE submissionid='$id'";
    mysql_query($query);

    // adding extras
    if (count($extras_name)>0 && count($extras_content)>0)
    {
      for ($i=0;$i<count($extras_name)&&$i<count($extras_content);$i++)
      {
        $name = $extras_name[$i];
        $content = $extras_content[$i];
        if ($name!="" || $content!="")
        {
          $query = "INSERT INTO {$dbprefix}submissions_extrafields (submissionid,name,content) VALUES ('$id','$name','$content')";
          mysql_query($query);
        }
      }
    }



    return true;
  }

  function getSubmission($id)
  {
    global $dbprefix;

    $query = "SELECT * FROM {$dbprefix}submissions WHERE id='$id'";

    $result = mysql_query($query);
    $numrows = mysql_num_rows($result);

    if ($numrows==0) return null;

    $submission = mysql_fetch_assoc($result);
    mysql_free_result($result);

    if ($submission['hidden'] && !$this->admin)
      return false;

    if ($submission['filename'])
    {
      // beware order
      $submission['url'] = $this->submissionsUrl.$submission['filename'];
      $submission['filename'] = $this->submissionsPath.$submission['filename'];
    }
    $user = $this->getUserinfo($submission['userid']);
    $submission['user'] = $user;

    $query = "SELECT count(*) FROM {$dbprefix}review_commitments WHERE submissionid=$id AND reviewid is NULL";
    $result = mysql_query($query);
    $submission['numreviews']+=mysql_result($result,0);

    $query = "SELECT name,content FROM {$dbprefix}submissions_extrafields WHERE submissionid='$id'";
    $result = mysql_query($query);

    if (mysql_num_rows($result)>0)
      $submission['extras'] = array();
    while($row = mysql_fetch_assoc($result))
    {
      $submission['extras'][] = $row;
    }
    mysql_free_result($result);

    $submission['reviewcommitments'] = $this->getCommittedUsers($id);
    $submission['committedtoreview'] = $this->hasCommitted( $this->userid, $id );

    return $submission;
  }

  function getNumSubmissions($userid)
  {
    global $dbprefix;

    if ($userid)
      $query = "SELECT COUNT(*) FROM {$dbprefix}submissions WHERE userid='$userid' AND hidden='0'";
    else
      $query = "SELECT COUNT(*) FROM {$dbprefix}submissions WHERE hidden='0'";

    $result = mysql_query($query);
    if (!$result) return 0;

    $row = mysql_fetch_row($result);
    mysql_free_result($result);

    return $row[0];
  }

  function getSubmissions($userid,$index,$num, $sortby = null,$dir = 0)
  {
    global $dbprefix;

    $udir = $dir==0?"DESC":"ASC";
    $ddir = $dir==0?"ASC":"DESC";

    $order = "ORDER BY submitted $udir";
    if ($sortby!=null)
    {
      switch($sortby)
      {
      case "title":
        $order = "ORDER BY title $ddir";
        break;
      case "rating":
        $order = "ORDER BY averagerating $udir";
        break;
      case "author":
        $order = "ORDER BY (SELECT concat(lastname,' ',firstname) FROM {$dbprefix}users WHERE id={$dbprefix}submissions.userid) $ddir";
        break;
      case "numreviews":
//        $order = "ORDER BY numreviews $udir";
        $order = "ORDER BY (SELECT count(*) FROM {$dbprefix}review_commitments WHERE submissionid={$dbprefix}submissions.id AND reviewid is NULL)+numreviews $udir";
        break;
      case "date":
        $order = "ORDER BY submitted $udir";
        break;
      case "affiliation":
        $order = "ORDER BY (SELECT affiliation FROM {$dbprefix}users WHERE id={$dbprefix}submissions.userid) $ddir";
        break;
      }
    }

//    if ($this->admin)
//    {
      if ($userid)
        $query = "SELECT * FROM {$dbprefix}submissions WHERE userid='$userid' $order LIMIT $index,$num";
      else
        $query = "SELECT * FROM {$dbprefix}submissions $order LIMIT $index,$num";
/*    }
    else
    {
      if ($userid)
        $query = "SELECT * FROM {$dbprefix}submissions WHERE userid='$userid' AND hidden='0' $order LIMIT $index,$num";
      else
        $query = "SELECT * FROM {$dbprefix}submissions WHERE hidden='0' $order LIMIT $index,$num";
    }*/

    $result = mysql_query($query);
    $numrows = mysql_num_rows($result);

    $data = array();

    while($submission = mysql_fetch_assoc($result))
    {
      if ($submission['filename'])
      {
        // beware order
        $submission['url'] = $this->submissionsUrl.$submission['filename'];
        $submission['filename'] = $this->submissionsPath.$submission['filename'];
      }

      $user = $this->getUserinfo($submission['userid']);
      if (!$user) continue;	// don't include this is user has been deleted
      $submission['user'] = $user;

      $id = $submission['id'];
      $query2 = "SELECT count(*) FROM {$dbprefix}review_commitments WHERE submissionid='$id' AND reviewid is NULL";
      $result2 = mysql_query($query2);
      $submission['numreviews']+=mysql_result($result2,0);

      $data[] = $submission;
    }
    mysql_free_result($result);

    return $data;
  }

  function getTopratedSubmissions($num)
  {
    global $dbprefix;

    $query = "SELECT * FROM {$dbprefix}submissions WHERE averagerating IS NOT NULL AND hidden='0' ORDER BY averagerating DESC LIMIT 0,$num";
    $result = mysql_query($query);
    if (!$result) return array();

    $data = array();

    while($row = mysql_fetch_assoc($result))
    {
      $data[] = $row;
    }

    mysql_free_result($result);

    return $data;
  }

  function deleteSubmission($submissionid,$byid)
  {
    global $dbprefix;

    $submission = $this->getSubmission($submissionid);
    $query = "DELETE FROM {$dbprefix}submissions WHERE id='$submissionid'";
    mysql_query($query);

    $reviews = $this->getReviews($submissionid);
    foreach($reviews as $review)
      $this->deleteReview($review[id],$byid);

    $id = $submission['id'];
    $userid = $submission['userid'];
    $title = $submission['title'];
    $authors = $submission['additionalauthors'];
    $type = $submission['type'];
    $abstract_ = $submission['abstract'];
    $filename = $submission['filename'];
    $filesize = $submission['filesize'];
    $link = $submission['link'];
    $submitted = $submission['submitted'];
    $forumthreadid = $submission['forumthreadid'];
    $deleted = date("Y-m-d H:i:s");

    $query = "INSERT INTO {$dbprefix}deleted_submissions (id,userid,title,additionalauthors,type,abstract,filename,filesize,link,submitted,forumthreadid,deleted,deletedby) VALUES ('$id','$userid','$title','$authors','$type','$abstract_','$filename','$filesize','$link','$submitted','$forumthreadid','$deleted','$byid')";
    mysql_query($query);

    $this->log("submissions","delete","$id, $title");

    $this->removeSearchWords("submissions","$submissionid");
  }

  function setSubmissionThread($submissionid,$threadid)
  {
    global $dbprefix;

    $query = "UPDATE {$dbprefix}submissions SET forumthreadid='$threadid' WHERE id='$submissionid'";
    return mysql_query($query);
  }

  // ...
  // submission-review commitments
  //

  function setReviewCommitment( $userid, $submissionid )
  {
	global $dbprefix;
    if ($this->hasCommitted($userid,$submissionid)) return false;
    $date = date("Y-m-d H:i:s");
    $query = "INSERT INTO {$dbprefix}review_commitments (userid,submissionid,date) VALUES ('$userid','$submissionid','$date')";
    mysql_query($query);
  }

  function hasCommitted( $userid, $submissionid )
  {
	global $dbprefix;
    $query = "SELECT * FROM {$dbprefix}review_commitments WHERE userid='$userid' AND submissionid='$submissionid'";
    $result = mysql_query($query);
    return mysql_num_rows($result)>0;
  }

  function removeReviewCommitment( $userid, $submissionid )
  {
	global $dbprefix;
    $query = "DELETE FROM {$dbprefix}review_commitments WHERE userid='$userid' AND submissionid='$submissionid'";
    return mysql_query($query);
  }

  function checkCommitmentAndSetReview( $reviewid )
  {
    global $dbprefix;

    $review = $this->getReview( $reviewid );
    if (!$review) return false;

    $userid = $review['userid'];
    $submissionid = $review['submissionid'];
/*    $query = "SELECT id FROM {$dbprefix}review_commitments WHERE submissionid='$submissionid' AND userid='$userid'";
    $result = mysql_query($query);
    if (mysql_num_rows($result)>0)
    {
      $row = mysql_fetch_row($result);
      $id = $row[0];

      $query = "UPDATE {$dbprefix}review_commitments SET reviewid='$reviewid' WHERE id='$id'";
      mysql_query($query);
    }
    mysql_free_result($result);
*/

    $query = "UPDATE {$dbprefix}review_commitments SET reviewid='$reviewid' WHERE userid='$userid' AND submissionid='$submissionid'";
    mysql_query($query);

    return true;
  }

  function getCommittedUsers( $submissionid )
  {
	global $dbprefix;
    $query = "SELECT * FROM {$dbprefix}review_commitments WHERE submissionid='$submissionid' AND reviewid is NULL";
    $result = mysql_query($query);

    $data = array();
    while($row = mysql_fetch_assoc($result))
    {
      $row['user'] = $this->getUserinfo($row['userid']);
      $data[] = $row;
    }
    mysql_free_result($result);

    return $data;
  }

  function getCommittedSubmissions( $userid )
  {
	global $dbprefix;
    $query = "SELECT * FROM {$dbprefix}review_commitments WHERE userid='$userid' AND reviewid is NULL";
    $result = mysql_query($query);

    $data = array();
    while($row = mysql_fetch_assoc($result))
    {
      $row['submission'] = $this->getSubmission($row['submissionid']);
      $data[] = $row;
    }
    mysql_free_result($result);

    return $data;
  }

  function getCommitments( $sortby="submission" )
  {
	global $dbprefix;
    $query = "SELECT rc.* FROM {$dbprefix}review_commitments rc";
    switch($sortby)
    {
    case "submission":
      $query .= ", {$dbprefix}submissions subs WHERE rc.submissionid=subs.id ORDER BY subs.title ASC";
      break;
    case "user":
      $query .= ", {$dbprefix}users usr WHERE rc.userid=usr.id ORDER BY CONCAT(usr.lastname,usr.firstname) ASC";
      break;
    }

    $result = mysql_query($query);

    $data = array();
    while($row = mysql_fetch_assoc($result))
    {
      $row['user'] = $this->getUserinfo($row['userid']);
      $row['submission'] = $this->getSubmission($row['submissionid']);
      $data[] = $row;
    }
    mysql_free_result($result);

    return $data;
  }

  // find submissions based on matching items
  //
  // ex. findSubmissions(array( "forumthreadid" => $threadid ))
  //
  function findSubmissions($vals)
  {
    global $dbprefix;

//    if (count($vals)==0) return getSubmissions(null,0,1048576);

    $query = "SELECT * FROM {$dbprefix}submissions WHERE";
    foreach($vals as $field => $value)
    {
      $query.= " $field='$value'";
    }

    $result = mysql_query($query);

    $data = array();
    while($row = mysql_fetch_assoc($result))
    {
      $data[] = $row;
    }
    mysql_free_result($result);

    return $data;
  }

  function expertiseToFactor($expertise)
  {
    global $dbprefix;

    switch($expertise)
    {
    case 1: return 0.5;
    case 2: return 0.75;
    case 3: return 1;
    case 4: return 1.25;
    default: return 0;
    }
  }

  function calcAndSetSubmissionRating($submissionid)
  {
    global $dbprefix;

    $reviews = $this->getReviews($submissionid);
    if (!$reviews) return false;

    $rating = 0.0;
    foreach($reviews as $review)
    {
//      $rating+=$review['overallrating']*$this->expertiseToFactor($review['expertise']);
      $rating+=$review['overallrating'];
    }

    if (count($reviews)>0)
      $rating/=count($reviews);

    if (count($reviews)==0)
      $query = "UPDATE {$dbprefix}submissions SET averagerating=NULL WHERE id='$submissionid'";
    else
      $query = "UPDATE {$dbprefix}submissions SET averagerating='$rating' WHERE id='$submissionid'";
    return mysql_query($query);
  }

  //
  // reviews
  //
  function findReview($userid,$submissionid)
  {
    global $dbprefix;

    $query = "SELECT * FROM {$dbprefix}reviews WHERE userid='$userid' AND submissionid='$submissionid'";
    $result = mysql_query($query);
    $row = mysql_fetch_assoc($result);
    mysql_free_result($result);
    return $row;
  }

  function getReviews($submissionid)
  {
    global $dbprefix;
    
    //echo "submissionid is $submissionid <br>";


    if ($submissionid)
      $query = "SELECT * FROM {$dbprefix}reviews WHERE submissionid='$submissionid' ORDER BY submitted DESC";
    else
//      $query = "SELECT * FROM {$dbprefix}reviews ORDER BY submitted DESC";
      $query = "SELECT revs.* FROM {$dbprefix}reviews as revs, {$dbprefix}submissions as subs WHERE revs.submissionid=subs.id ORDER BY subs.averagerating, subs.id DESC";
    $result = mysql_query($query);

    //echo "if there was a mysql error it was ".mysql_error();
    
    $data = array();

    while ($row = mysql_fetch_array($result, MYSQL_ASSOC))
    {
      $row['user'] = $this->getUserinfo($row['userid']);
      if (!$row['user']) continue; // don't include if user not exists

      //maybe this will work.  jofish
      //echo "row is: ".print_r($row);
      $reviewid = $row['id'];

      //blooody hell.  ok, i'm commenting out.  no stars for anyone.
      // set stars
      $row['stars'] = $this->getNumReviewStars($reviewid);

      $data[] = $row;
    }

    mysql_free_result($result);

    return $data;
  }

  function getUserReviews($userid)
  {
    global $dbprefix;

    $query = "SELECT * FROM {$dbprefix}reviews WHERE userid='$userid' ORDER BY submitted DESC";
    $result = mysql_query($query);

    $data = array();

    while ($row = mysql_fetch_array($result, MYSQL_ASSOC))
    {
      $row['submission'] = $this->getSubmission($row['submissionid']);
//      $row['user'] = $this->getUserinfo($row['userid']);

      // set stars
      $row['stars'] = $this->getNumReviewStars($reviewid);

      $data[] = $row;
    }

    mysql_free_result($result);

    return $data;
  }

  function getReview($reviewid)
  {
    global $dbprefix;

    $query = "SELECT * FROM {$dbprefix}reviews WHERE id='$reviewid'";
    $result = mysql_query($query);

    $row = mysql_fetch_array($result,MYSQL_ASSOC);

    mysql_free_result($result);

    $row['user'] = $this->getUserinfo($row['userid']);
    $row['submission'] = $this->getSubmission($row['submissionid']);

    // set stars
    $row['stars'] = $this->getNumReviewStars($reviewid);

    return $row;
  }

  function submitReview($userid,$submissionid, $expertise,$overallrating, $summary, $review, $relationship, $quality, $qualitytext, $appropriate, $appropriatetext, $controversial, $controversialtext)
  {
    global $dbprefix;

    $date = date("Y-m-d H:i:s");
    $query = "INSERT INTO {$dbprefix}reviews ".
      "(id,userid,submissionid,expertise,overallrating,summary,review,relationship,submitted,quality,qualitytext,appropriate,appropriatetext,controversial,controversialtext)".
      "VALUES ('','$userid','$submissionid','$expertise','$overallrating','".
      mysql_real_escape_string($summary)."','".
      mysql_real_escape_string($review)."','".
      mysql_real_escape_string($relationship)."',".
      "'$date')";
      //      "'$quality','".
      //mysql_real_escape_string($qualitytext)."',".
      //"'$appropriate','".
      //mysql_real_escape_string($appropriatetext)."','".
      //"$controversial','".
      //mysql_real_escape_string($controversialtext)."')";

    if (!mysql_query($query))
      {
	echo "there was a mysql error submitting the review: ".mysql_error();
	return false;
      }

    $id = mysql_insert_id();

    $this->log("reviews","submit","$id,$submissionid");

    $this->calcAndSetSubmissionRating($submissionid);

    $user = $this->getUserinfo($userid);

    // parse for search words
    $this->parseForSearchWords($summary,"reviews","$id");
    $this->parseForSearchWords($user['firstname']." ".$user['lastname'],"reviews","$id");

    // increase num reviews
    $query = "UPDATE {$dbprefix}submissions SET numreviews=numreviews+1 WHERE id='$submissionid'";
    if (!mysql_query($query))
      echo "error in increase num reviews: ".mysql_error();
    

    $this->checkCommitmentAndSetReview( $id );

    return $id;
  }

  function updateReview($id,$expertise,$rating,$summary,$reviewtext,$relationship)
  {
    global $dbprefix;

    if (!$id||!$expertise||!$rating||!$summary||!$reviewtext) return false;

    $review = $this->getReview($id);
    if (!$review) return false;

    $editdate = date("Y-m-d H:i:s");

    $query = "UPDATE {$dbprefix}reviews SET expertise='$expertise',overallrating='$rating',summary='$summary',review='$reviewtext',relationship='$relationship',edited='$editdate' WHERE id='$id'";
    if (mysql_query($query))
    {
      $this->log("reviews","update","$id");
      $this->calcAndSetSubmissionRating($review['submissionid']);

      // parse for search words
      $this->parseForSearchWords($summary,"reviews","$id");
      $this->parseForSearchWords($review['user']['firstname']." ".$review['user']['lastname'],"reviews","$id");

      return true;
    }
    return false;
  }

  function deleteReview($reviewid,$byid)
  {
    global $dbprefix;

    $review = $this->getReview($reviewid);
    $query = "DELETE FROM {$dbprefix}reviews WHERE id='$reviewid'";
    if (!mysql_query($query)) return false;

    $query = sprintf("INSERT INTO {$dbprefix}deleted_reviews (id,userid,submissionid,expertise,overallrating,summary,review,relationship,submitted,edited,deleted,deletedby) VALUES ('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",$review['id'],$review['userid'],$review['submissionid'],$review['expertise'],$review['overallrating'],$review['summary'],$review['review'],$review['relationship'],$review['submitted'],$review['edited'],date("Y-m-d H:i:s"),$byid);
    mysql_query($query);

    $this->log("reviews","delete","$reviewid");

    $this->calcAndSetSubmissionRating($review['submissionid']);

    // decreaswe num reviews
    $query = "UPDATE {$dbprefix}submissions SET numreviews=numreviews-1 WHERE id='" . $review['submissionid'] . "'";
    mysql_query($query);

    return true;
  }

  function hasUserReviewed($userid,$submissionid)
  {
    global $dbprefix;

    $query = "SELECT count(*) FROM {$dbprefix}reviews WHERE userid='$userid' AND submissionid='$submissionid'";
    $result = mysql_query($query);
    $row = mysql_fetch_row($result);
    mysql_free_result($result);
    if ($row[0]>0) return true;
    else return false;
  }

  function getTopReviewers($num)
  {
    global $dbprefix;

    $query = "SELECT u.* FROM {$dbprefix}users u, (SELECT count(*) AS cnt,{$dbprefix}users.id id FROM {$dbprefix}users,{$dbprefix}review_stars t1,{$dbprefix}reviews t2 WHERE t1.reviewid=t2.id AND t2.userid={$dbprefix}users.id GROUP BY t2.userid) c WHERE u.id=c.id ORDER BY c.cnt DESC LIMIT 0,$num";
    $result = mysql_query($query);
    if (!$result) return array();

    $data = array();
    while($row = mysql_fetch_assoc($result))
    {
      $data[] = $row;
    }
    mysql_free_result($result);

    return $data;
  }

  //
  // Users
  //
  function getNumUsers()
  {
    global $dbprefix;

    $query = "SELECT COUNT(*) FROM {$dbprefix}users";
    $result = mysql_query($query);
    $row = mysql_fetch_row($result);
    mysql_free_result($result);
    return $row[0];
  }

  function getUsers($index,$num)
  {
    global $dbprefix;

    $query = "SELECT * FROM {$dbprefix}users LIMIT $index,$num";
    $result = mysql_query($query);

    $data = array();
    while($row = mysql_fetch_assoc($result))
    {
      $data[] = $row;
    }

    return $data;
  }

  function deleteUser($userid)
  {
    global $dbprefix;

    if ($userid == $this->userid) return false;

    $user = $this->getUserinfo($userid);

    $query = "DELETE FROM {$dbprefix}users WHERE id='$userid'";
    if (mysql_query($query))
    {
      $this->log("users","delete","$userid,".$user['user']);
      return true;
    }
    else
      return false;
  }

  //
  // stars! * * * * *
  //
  function assignStarToReview($reviewid)
  {
    global $dbprefix;

    $review = $this->getReview($reviewid);
    if (!$review) return false;

    // should not allow assigning star to your own work.
    if ($review['userid']==$userid)
    {
      return false;
    }

    $query = "SELECT count(*) c FROM {$dbprefix}review_stars WHERE reviewid='$reviewid' AND userid='" . $this->userid . "'";
    $result = mysql_query($query);
    if (mysql_result($result,0,'c')==0)
    {
      $query = "INSERT INTO {$dbprefix}review_stars (reviewid,userid) VALUES ('$reviewid','" . $this->userid . "')";
      return mysql_query($query);
    }

    return true;
  }

  function removeStarFromReview($reviewid)
  {
    global $dbprefix;

    if (!$this->getReview($reviewid)) return false;

    $userid = $this->userid;
    $query = "DELETE FROM {$dbprefix}review_stars WHERE reviewid='$reviewid' AND userid='$userid'";
    return mysql_query($query);
  }

  function getNumReviewStars($reviewid)
  {
    global $dbprefix;

    $query = "SELECT count(*) FROM {$dbprefix}review_stars WHERE reviewid='$reviewid'";
    $result = mysql_query($query);
    $row = mysql_fetch_row($result);
    $num = $row[0];
    mysql_free_result($result);
    return $num;
  }

  function userPutStar($userid,$reviewid)
  {
    global $dbprefix;

    $query = "SELECT count(*) c FROM {$dbprefix}review_stars WHERE reviewid='$reviewid' AND userid='$userid'";
    $result = mysql_query($query);
    if (mysql_result($result,0,'c')==0)
      return false;
    else
      return true;
  }

  //
  // log
  //
  function log($category,$event,$details)
  {
    global $dbprefix;

    $time = date("Y-m-d H:i:s");
    $userid = $this->userid;
    $query = "INSERT INTO {$dbprefix}log (category,event,details,userid,time) VALUES ('$category','$event','$details','$userid','$time')";
    return mysql_query($query);
  }

  function getLogs()
  {
    global $dbprefix;

    $query = "SELECT * FROM {$dbprefix}log";
    $result = mysql_query($query);
    $data=array();
    while($row = mysql_fetch_assoc($result))
    {
      $data[] = $row;
    }
    mysql_free_result($result);
    return $data;
  }

  //
  // searching
  //
  function parseForSearchWords($text,$location,$id)
  {
    global $dbprefix;

    $text = ereg_replace("(\\,|\\.|\\!|\\?|\n|\(|\))"," ",$text);
    $words = explode(" ",$text);
    foreach($words as $word)
    {
      if (strlen($word)<3) continue;

//      echo $word."<br>\n";

      $query = "INSERT INTO {$dbprefix}searchwords (word,location,id) VALUES ('$word','$location','$id')";
      mysql_query($query);
    }
  }

  function removeSearchWords($location,$id)
  {
    global $dbprefix;

    $query = "DELETE FROM {$dbprefix}searchwords WHERE location='$location',id='$id'";
    return mysql_query($query);
  }

  function search($words)
  {
    global $dbprefix;

    $str = $words;
//    $query = "SELECT word,location,id FROM searchwords WHERE MATCH (word) AGAINST ('$str') GROUP BY location,id";
    $words = explode(" ",$words);
    for($i=0;$i<count($words);$i++) $words[$i] = "'".$words[$i]."'";
    $str = implode(" OR word=",$words);
    $query = "SELECT location,id FROM {$dbprefix}searchwords WHERE word=$str GROUP BY location,id";
    $result = mysql_query($query);

    $data = array();
    while($row = mysql_fetch_assoc($result))
    {
      $data[] = $row;
    }
    mysql_free_result($result);

    return $data;
  }

  function bugSubmitReport($text)
  {
    global $dbprefix;

    $userid = $this->userid;
    $query = "INSERT INTO {$dbprefix}bugs (text,status,userid) VALUES ('$text','submitted','$userid')";
    mysql_query($query);
  }

  function mailAll($subject,$content)
  {
    global $dbprefix;

    if (!$subject || !$content) return false;

    $mail = new PHPMailer();

    if (!$mail) return false;

    $mail->IsSMTP();
    $mail->Host = "localhost";
    //$mail->SMTPAuth = true;
    //$mail->Username = "noreply";
    //$mail->Password = "8ouq2abr";

    $mail->From = "chi2008-alt@acm.org";
    $mail->FromName = "";
//    $mail->AddAddress($user['email'],$user['firstname']." ".$user['lastname']);

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// add mailaddresses here!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    $query = "SELECT firstname,lastname,email FROM {$dbprefix}users";
    $result = mysql_query($query);
    while($row = mysql_fetch_assoc($result))
    {
      $mail->AddBCC($row['email'],$row['firstname']." ".$row['lastname']);
    }
    mysql_free_result($result);
//    $mail->AddReplyTo("noreply@acm.org","No reply");

    $mail->IsHTML(false);

    $mail->Subject = $subject;
    $mail->Body = $content;

    if ($mail->Send())
    {
      return true;
    }
    else
    {
      return false;
    }
  }
  
  function userHasPermission($perm, $userid=false)
  {
	global $dbprefix;

	if (!$userid)
		$userid = $this->userid;

	$query = "SELECT permission,value FROM {$dbprefix}userpermissions WHERE userid='$userid'";
	$result = mysql_query($query);

	if ($row = mysql_fetch_assoc($result))
	{
		return $row['value']=='y';
	}

	return false;
  }
  
  function assignUserToReview($submissionid, $userid)
  {
	global $dbprefix;

	$now = date("Y-m-d H:i:s");

	$query = "SELECT * FROM {$dbprefix}review_assignments WHERE submissionid='$submissionid' AND userid='$userid'";
	$result = mysql_query($query);
	if ($row = mysql_fetch_assoc($result))	// if exists then increase reminders
	{
		$reminders = $row['reminders'] + 1;
		$query = "UPDATE {$dbprefix}review_assignments SET reminders='$reminders' WHERE submissionid='$submissionid' AND userid='$userid'";
		if (!mysql_query($query)) return false;
	}
	else
	{
		$query = "INSERT INTO {$dbprefix}review_assignments (submissionid,userid,time_assigned,reminders) VALUES ('$submissionid','$userid','$now','0')";
		if (!mysql_query($query)) return false;
	}
	return true;
  }
  
  function getReviewAssignedUsers($submissionid)
  {
	global $dbprefix;
	
	$query = "SELECT * FROM {$dbprefix}review_assignments WHERE submissionid='$submissionid'";
    $result = mysql_query($query);
    $data=array();
    while($row = mysql_fetch_assoc($result))
    {
		$userid = $row['userid'];
		$user = $this->getUserinfo($userid);
		$data[] = $user;
    }
    mysql_free_result($result);
    return $data;
  }
  
  function getUserEmail($identifier)
  {
	global $dbprefix;

	$userid = $this->userid;
	
	$query = "SELECT email FROM {$dbprefix}user_emails WHERE userid='$userid' AND identifier='$identifier'";
	$result = mysql_query($query);
	if ($row = mysql_fetch_assoc($result))
	{
		return $row['email'];
	}
	return "";
  }
  
  function setUserEmail($identifier,$email)
  {
	global $dbprefix;
	$userid = $this->userid;
	
	$sqlemail = mysql_real_escape_string($email);

	$query = "SELECT * FROM {$dbprefix}user_emails WHERE userid='$userid' AND identifier='$identifier'";
	$result = mysql_query($query);
	if (mysql_num_rows($result)>0)
	{
		$query = "UPDATE {$dbprefix}user_emails SET email='$sqlemail' WHERE userid='$userid' AND identifier='$identifier'";
	}
	else
	{
		$query = "INSERT INTO {$dbprefix}user_emails (userid,identifier,email) VALUES ('$userid','$identifier','$sqlemail')";
	}
	mysql_query( $query );
  }
}

?>
